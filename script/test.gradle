/**
 * Making the plugin configurable
 */
abstract class GreetingPluginExtension {
    abstract Property<String> getMessage()

    GreetingPluginExtension() {
        message.convention('Hello from GreetingPlugin')
    }
}

interface GreetingPluginExtensionImpl {
    Property<String> getMessage()

    Property<String> getGreeter()
}

/**
 * Working with files in custom tasks and plugins
 */
abstract class GreetingToFileTask extends DefaultTask {
    @OutputFile
    abstract RegularFileProperty getDestination()

    @TaskAction
    def greet() {
        def file = getDestination().get().asFile
        file.parentFile.mkdirs()
        file.write("I am a file's write message!")
    }
}

def greetFile = objects.fileProperty()

tasks.register('AGreet', GreetingToFileTask) {
    destination = greetFile
}

tasks.register('AGreeting'){
    dependsOn AGreet
    doLast{
        def file=greetFile.get().asFile
        println "文件名:${file.name}，文件内容：${file.text}"
    }
}

/**
 * Writing a simple plugin
 */
class GreetingPlugin implements Plugin<Project> {

    private String PLUGIN_NAME = 'AGreetingPlugin'

    @Override
    void apply(Project project) {

        def extension = project.extensions.create("greeting", GreetingPluginExtension)

        def extensionImpl = project.extensions.create("greetingImpl", GreetingPluginExtensionImpl)

        project.task(PLUGIN_NAME) {
            println("I'm from text.gradle's GreetingPlugin")

            doFirst {
                println("I'm from GreetingPlugin.doFirst：")
                println "打印：${extensionImpl.message.get()}，${extensionImpl.greeter.get()}"
            }

            doLast {
                println("I'm from GreetingPlugin.doLast：")
                println "输出：" + extension.message.get()
            }
        }
    }
}

apply plugin: GreetingPlugin

greeting.message = "Hi greeting, I from Gradle"

greetingImpl {
    message = "Hi greetingImpl,I from Gradle' message"
    greeter = "Hi greetingImpl,I from Gradle' greeter"
}

greetFile.set(layout.projectDirectory.file('Hello.txt'))